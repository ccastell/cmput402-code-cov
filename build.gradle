plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    // TODO: Add jococo plugin
    id 'jacoco'
}

group 'com.example.helloworld'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'

mainClassName = 'com.example.helloworld.HelloWorldApplication'
 
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: '1.3.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // Reference: https://www.baeldung.com/junit-5-gradle
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnit()
}

run {
    args = ['server', 'hello-world.yml']
}

// TODO: Set jacoco version to be 0.8.5
// TODO: Enable jacoco test report in xml format


jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
    }
}
//test {
//    jacoco {
//        enabled = true
//        destinationFile = file("$buildDir/jacoco/${name}.html")
//        includes = []
//        excludes = []
//        excludeClassLoaders = []
//        includeNoLocationClasses = false
//        sessionId = "<auto-generated value>"
//        dumpOnExit = true
//        classDumpDir = null
//        output = JacocoTaskExtension.Output.FILE
//        address = "localhost"
//        port = 6300
//        jmx = false
//    }
//}

shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.SF'
    manifest {
        attributes 'Main-Class': mainClassName
    }
    archiveName rootProject.name + '-' + rootProject.version + '.jar'
}
